// FILE: Adder_32bits.vh

`include "Adder_32bits.vi"

// VERILOG netlist for "Adder_32bits" (generated by MMI_SUE4.4.0)

module xgate (in, in_L, t1, t2);
	inout		t1;
	inout		t2;
	input		in;
	input		in_L;
 
	pmos p(t2,t1,in_L);
	nmos n(t2,t1,in);

endmodule		// xgate

module my_xor (in1, in2, out);
	input		in1;
	input		in2;
	output		out;
 
	wire		net_2;
	wire		net_3;
	wire		net_1;
 
	not #0 inv(net_1, in1);
	not #0 inv_1(out, net_2);
	not #0 inv_2(net_3, in2);
	xgate xgate(.in_L(net_1), .t2(net_2), .in(in1), .t1(in2));
	xgate xgate_1(.in(net_1), .t2(net_2), .t1(net_3), .in_L(in1));

endmodule		// my_xor

module Adder_HA (A, B, Cout, S);
	input		A;
	input		B;
	output		Cout;
	output		S;
 
	wire		net_1;
 
	my_xor my_xor(.in1(A), .in2(B), .out(S));
	assign #0 net_1 = !(A && B);
	not #0 inv(Cout, net_1);

endmodule		// Adder_HA

module Adder_FA (A, B, Cin, Cout, S);
	input		A;
	input		B;
	input		Cin;
	output		Cout;
	output		S;
 
	wire		net_2;
	wire		net_3;
	wire		net_4;
	wire		net_1;
 
	Adder_HA Adder_HA(.S(net_1), .Cout(net_2), .A(A), .B(B));
	Adder_HA Adder_HA_1(.A(net_1), .Cout(net_3), .B(Cin), .S(S));
	assign net_4 = !(net_3 || net_2);
	not #0 inv(Cout, net_4);

endmodule		// Adder_FA

module Adder_4bits (A, B, Cin, Cout, S);
	input		Cin;
	input	[3:0]	A;
	input	[3:0]	B;
	output		Cout;
	output	[3:0]	S;
 
	wire		net_2;
	wire		net_3;
	wire		net_1;
 
	Adder_FA Adder_FA(.Cout(net_2), .A(A[0]), .Cin(Cin), .B(B[0]), 
		.S(S[0]));
	Adder_FA Adder_FA_1(.Cin(net_2), .Cout(net_3), .A(A[1]), .B(B[1]), 
		.S(S[1]));
	Adder_FA Adder_FA_2(.Cout(net_1), .Cin(net_3), .A(A[2]), .B(B[2]), 
		.S(S[2]));
	Adder_FA Adder_FA_3(.Cin(net_1), .A(A[3]), .B(B[3]), .Cout(Cout), 
		.S(S[3]));

endmodule		// Adder_4bits

module Adder_8bits (A, B, Cin, Cout, S);
	input		Cin;
	input	[7:0]	A;
	input	[7:0]	B;
	output		Cout;
	output	[7:0]	S;
 
	wire		net_1;
 
	Adder_4bits Adder_4bits(.Cout(net_1), .A(A[3:0]), .B(B[3:0]), 
		.Cin(Cin), .S(S[3:0]));
	Adder_4bits Adder_4bits_1(.Cin(net_1), .A(A[7:4]), .B(B[7:4]), 
		.S(S[7:4]), .Cout(Cout));

endmodule		// Adder_8bits

module Adder_32bits (A, B, Cin, Cout, S);
	input		Cin;
	input	[31:0]	A;
	input	[31:0]	B;
	output		Cout;
	output	[31:0]	S;
 
	wire		net_2;
	wire		net_3;
	wire		net_1;
 
	Adder_8bits Adder_8bits(.Cout(net_3), .A(A[7:0]), .Cin(Cin), 
		.B(B[7:0]), .S(S[7:0]));
	Adder_8bits Adder_8bits_1(.Cout(net_1), .Cin(net_3), .A(A[15:8]), 
		.B(B[15:8]), .S(S[15:8]));
	Adder_8bits Adder_8bits_2(.Cin(net_1), .Cout(net_2), .A(A[23:16]), 
		.B(B[23:16]), .S(S[23:16]));
	Adder_8bits Adder_8bits_3(.Cin(net_2), .A(A[31:24]), .B(B[31:24]), 
		.Cout(Cout), .S(S[31:24]));

endmodule		// Adder_32bits

