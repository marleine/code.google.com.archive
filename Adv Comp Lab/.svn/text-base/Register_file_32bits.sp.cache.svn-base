set NETLIST_CACHE(Register_file_32bits,cells) {{schematic Reg_32bit} {schematic Reg0_32bit} {schematic Dec_5x32} {schematic writeEnable}}
set netlist_props spice
set netlist_level 1000
set NETLIST_CACHE(Register_file_32bits,level) main
set NETLIST_CACHE(Register_file_32bits,version) MMI_SUE4.4.0
set NETLIST_CACHE(Register_file_32bits) {{* start main CELL Register_file_32bits} {* .SUBCKT Register_file_32bits address_read1[0] address_read1[1] } {*+ address_read1[2] address_read1[3] address_read1[4] address_read2[0] } {*+ address_read2[1] address_read2[2] address_read2[3] address_read2[4] } {*+ address_write[0] address_write[1] address_write[2] address_write[3] } {*+ address_write[4] data[0] data[1] data[2] data[3] data[4] data[5] data[6] } {*+ data[7] data[8] data[9] data[10] data[11] data[12] data[13] data[14] } {*+ data[15] data[16] data[17] data[18] data[19] data[20] data[21] data[22] } {*+ data[23] data[24] data[25] data[26] data[27] data[28] data[29] data[30] } {*+ data[31] out1[0] out1[1] out1[2] out1[3] out1[4] out1[5] out1[6] out1[7] } {*+ out1[8] out1[9] out1[10] out1[11] out1[12] out1[13] out1[14] out1[15] } {*+ out1[16] out1[17] out1[18] out1[19] out1[20] out1[21] out1[22] out1[23] } {*+ out1[24] out1[25] out1[26] out1[27] out1[28] out1[29] out1[30] out1[31] } {*+ out2[0] out2[1] out2[2] out2[3] out2[4] out2[5] out2[6] out2[7] out2[8] } {*+ out2[9] out2[10] out2[11] out2[12] out2[13] out2[14] out2[15] out2[16] } {*+ out2[17] out2[18] out2[19] out2[20] out2[21] out2[22] out2[23] out2[24] } {*+ out2[25] out2[26] out2[27] out2[28] out2[29] out2[30] out2[31] } {*+ write_enable } {XwriteEnable net_1[0] net_1[1] net_1[2] net_1[3] net_1[4] net_1[5] net_1[6] } {+ net_1[7] net_1[8] net_1[9] net_1[10] net_1[11] net_1[12] net_1[13] } {+ net_1[14] net_1[15] net_1[16] net_1[17] net_1[18] net_1[19] net_1[20] } {+ net_1[21] net_1[22] net_1[23] net_1[24] net_1[25] net_1[26] net_1[27] } {+ net_1[28] net_1[29] net_1[30] net_1[31] w[0] w[1] w[2] w[3] w[4] w[5] } {+ w[6] w[7] w[8] w[9] w[10] w[11] w[12] w[13] w[14] w[15] w[16] w[17] w[18] } {+ w[19] w[20] w[21] w[22] w[23] w[24] w[25] w[26] w[27] w[28] w[29] w[30] } {+ w[31] write_enable writeEnable } {XDec_5x32 address_write[0] address_write[1] address_write[2] } {+ address_write[3] address_write[4] net_1[0] net_1[1] net_1[2] net_1[3] } {+ net_1[4] net_1[5] net_1[6] net_1[7] net_1[8] net_1[9] net_1[10] net_1[11] } {+ net_1[12] net_1[13] net_1[14] net_1[15] net_1[16] net_1[17] net_1[18] } {+ net_1[19] net_1[20] net_1[21] net_1[22] net_1[23] net_1[24] net_1[25] } {+ net_1[26] net_1[27] net_1[28] net_1[29] net_1[30] net_1[31] Dec_5x32 } {XDec_5x32_1 address_read2[0] address_read2[1] address_read2[2] } {+ address_read2[3] address_read2[4] R2[0] R2[1] R2[2] R2[3] R2[4] R2[5] } {+ R2[6] R2[7] R2[8] R2[9] R2[10] R2[11] R2[12] R2[13] R2[14] R2[15] R2[16] } {+ R2[17] R2[18] R2[19] R2[20] R2[21] R2[22] R2[23] R2[24] R2[25] R2[26] } {+ R2[27] R2[28] R2[29] R2[30] R2[31] Dec_5x32 } {XDec_5x32_2 address_read1[0] address_read1[1] address_read1[2] } {+ address_read1[3] address_read1[4] R1[0] R1[1] R1[2] R1[3] R1[4] R1[5] } {+ R1[6] R1[7] R1[8] R1[9] R1[10] R1[11] R1[12] R1[13] R1[14] R1[15] R1[16] } {+ R1[17] R1[18] R1[19] R1[20] R1[21] R1[22] R1[23] R1[24] R1[25] R1[26] } {+ R1[27] R1[28] R1[29] R1[30] R1[31] Dec_5x32 } {XReg0_32bit inR1[0] inR2[0] out1[0] out1[1] out1[2] out1[3] out1[4] out1[5] } {+ out1[6] out1[7] out1[8] out1[9] out1[10] out1[11] out1[12] out1[13] } {+ out1[14] out1[15] out1[16] out1[17] out1[18] out1[19] out1[20] out1[21] } {+ out1[22] out1[23] out1[24] out1[25] out1[26] out1[27] out1[28] out1[29] } {+ out1[30] out1[31] out2[0] out2[1] out2[2] out2[3] out2[4] out2[5] out2[6] } {+ out2[7] out2[8] out2[9] out2[10] out2[11] out2[12] out2[13] out2[14] } {+ out2[15] out2[16] out2[17] out2[18] out2[19] out2[20] out2[21] out2[22] } {+ out2[23] out2[24] out2[25] out2[26] out2[27] out2[28] out2[29] out2[30] } {+ out2[31] Reg0_32bit } {XReg_32bit inR1[1] inR2[1] data[0] data[1] data[2] data[3] data[4] data[5] } {+ data[6] data[7] data[8] data[9] data[10] data[11] data[12] data[13] } {+ data[14] data[15] data[16] data[17] data[18] data[19] data[20] data[21] } {+ data[22] data[23] data[24] data[25] data[26] data[27] data[28] data[29] } {+ data[30] data[31] out1[0] out1[1] out1[2] out1[3] out1[4] out1[5] out1[6] } {+ out1[7] out1[8] out1[9] out1[10] out1[11] out1[12] out1[13] out1[14] } {+ out1[15] out1[16] out1[17] out1[18] out1[19] out1[20] out1[21] out1[22] } {+ out1[23] out1[24] out1[25] out1[26] out1[27] out1[28] out1[29] out1[30] } {+ out1[31] out2[0] out2[1] out2[2] out2[3] out2[4] out2[5] out2[6] out2[7] } {+ out2[8] out2[9] out2[10] out2[11] out2[12] out2[13] out2[14] out2[15] } {+ out2[16] out2[17] out2[18] out2[19] out2[20] out2[21] out2[22] out2[23] } {+ out2[24] out2[25] out2[26] out2[27] out2[28] out2[29] out2[30] out2[31] } {+ w[1] Reg_32bit } {XReg_32bit_1 inR1[2] inR2[2] data[0] data[1] data[2] data[3] data[4] } {+ data[5] data[6] data[7] data[8] data[9] data[10] data[11] data[12] } {+ data[13] data[14] data[15] data[16] data[17] data[18] data[19] data[20] } {+ data[21] data[22] data[23] data[24] data[25] data[26] data[27] data[28] } {+ data[29] data[30] data[31] out1[0] out1[1] out1[2] out1[3] out1[4] } {+ out1[5] out1[6] out1[7] out1[8] out1[9] out1[10] out1[11] out1[12] } {+ out1[13] out1[14] out1[15] out1[16] out1[17] out1[18] out1[19] out1[20] } {+ out1[21] out1[22] out1[23] out1[24] out1[25] out1[26] out1[27] out1[28] } {+ out1[29] out1[30] out1[31] out2[0] out2[1] out2[2] out2[3] out2[4] } {+ out2[5] out2[6] out2[7] out2[8] out2[9] out2[10] out2[11] out2[12] } {+ out2[13] out2[14] out2[15] out2[16] out2[17] out2[18] out2[19] out2[20] } {+ out2[21] out2[22] out2[23] out2[24] out2[25] out2[26] out2[27] out2[28] } {+ out2[29] out2[30] out2[31] w[2] Reg_32bit } {XReg_32bit_2 inR1[3] inR2[3] data[0] data[1] data[2] data[3] data[4] } {+ data[5] data[6] data[7] data[8] data[9] data[10] data[11] data[12] } {+ data[13] data[14] data[15] data[16] data[17] data[18] data[19] data[20] } {+ data[21] data[22] data[23] data[24] data[25] data[26] data[27] data[28] } {+ data[29] data[30] data[31] out1[0] out1[1] out1[2] out1[3] out1[4] } {+ out1[5] out1[6] out1[7] out1[8] out1[9] out1[10] out1[11] out1[12] } {+ out1[13] out1[14] out1[15] out1[16] out1[17] out1[18] out1[19] out1[20] } {+ out1[21] out1[22] out1[23] out1[24] out1[25] out1[26] out1[27] out1[28] } {+ out1[29] out1[30] out1[31] out2[0] out2[1] out2[2] out2[3] out2[4] } {+ out2[5] out2[6] out2[7] out2[8] out2[9] out2[10] out2[11] out2[12] } {+ out2[13] out2[14] out2[15] out2[16] out2[17] out2[18] out2[19] out2[20] } {+ out2[21] out2[22] out2[23] out2[24] out2[25] out2[26] out2[27] out2[28] } {+ out2[29] out2[30] out2[31] w[3] Reg_32bit } {XReg_32bit_3 inR1[4] inR2[4] data[0] data[1] data[2] data[3] data[4] } {+ data[5] data[6] data[7] data[8] data[9] data[10] data[11] data[12] } {+ data[13] data[14] data[15] data[16] data[17] data[18] data[19] data[20] } {+ data[21] data[22] data[23] data[24] data[25] data[26] data[27] data[28] } {+ data[29] data[30] data[31] out1[0] out1[1] out1[2] out1[3] out1[4] } {+ out1[5] out1[6] out1[7] out1[8] out1[9] out1[10] out1[11] out1[12] } {+ out1[13] out1[14] out1[15] out1[16] out1[17] out1[18] out1[19] out1[20] } {+ out1[21] out1[22] out1[23] out1[24] out1[25] out1[26] out1[27] out1[28] } {+ out1[29] out1[30] out1[31] out2[0] out2[1] out2[2] out2[3] out2[4] } {+ out2[5] out2[6] out2[7] out2[8] out2[9] out2[10] out2[11] out2[12] } {+ out2[13] out2[14] out2[15] out2[16] out2[17] out2[18] out2[19] out2[20] } {+ out2[21] out2[22] out2[23] out2[24] out2[25] out2[26] out2[27] out2[28] } {+ out2[29] out2[30] out2[31] w[4] Reg_32bit } {XReg_32bit_4 inR1[5] inR2[5] data[0] data[1] data[2] data[3] data[4] } {+ data[5] data[6] data[7] data[8] data[9] data[10] data[11] data[12] } {+ data[13] data[14] data[15] data[16] data[17] data[18] data[19] data[20] } {+ data[21] data[22] data[23] data[24] data[25] data[26] data[27] data[28] } {+ data[29] data[30] data[31] out1[0] out1[1] out1[2] out1[3] out1[4] } {+ out1[5] out1[6] out1[7] out1[8] out1[9] out1[10] out1[11] out1[12] } {+ out1[13] out1[14] out1[15] out1[16] out1[17] out1[18] out1[19] out1[20] } {+ out1[21] out1[22] out1[23] out1[24] out1[25] out1[26] out1[27] out1[28] } {+ out1[29] out1[30] out1[31] out2[0] out2[1] out2[2] out2[3] out2[4] } {+ out2[5] out2[6] out2[7] out2[8] out2[9] out2[10] out2[11] out2[12] } {+ out2[13] out2[14] out2[15] out2[16] out2[17] out2[18] out2[19] out2[20] } {+ out2[21] out2[22] out2[23] out2[24] out2[25] out2[26] out2[27] out2[28] } {+ out2[29] out2[30] out2[31] w[5] Reg_32bit } {XReg_32bit_5 inR1[6] inR2[6] data[0] data[1] data[2] data[3] data[4] } {+ data[5] data[6] data[7] data[8] data[9] data[10] data[11] data[12] } {+ data[13] data[14] data[15] data[16] data[17] data[18] data[19] data[20] } {+ data[21] data[22] data[23] data[24] data[25] data[26] data[27] data[28] } {+ data[29] data[30] data[31] out1[0] out1[1] out1[2] out1[3] out1[4] } {+ out1[5] out1[6] out1[7] out1[8] out1[9] out1[10] out1[11] out1[12] } {+ out1[13] out1[14] out1[15] out1[16] out1[17] out1[18] out1[19] out1[20] } {+ out1[21] out1[22] out1[23] out1[24] out1[25] out1[26] out1[27] out1[28] } {+ out1[29] out1[30] out1[31] out2[0] out2[1] out2[2] out2[3] out2[4] } {+ out2[5] out2[6] out2[7] out2[8] out2[9] out2[10] out2[11] out2[12] } {+ out2[13] out2[14] out2[15] out2[16] out2[17] out2[18] out2[19] out2[20] } {+ out2[21] out2[22] out2[23] out2[24] out2[25] out2[26] out2[27] out2[28] } {+ out2[29] out2[30] out2[31] w[6] Reg_32bit } {XReg_32bit_6 inR1[7] inR2[7] data[0] data[1] data[2] data[3] data[4] } {+ data[5] data[6] data[7] data[8] data[9] data[10] data[11] data[12] } {+ data[13] data[14] data[15] data[16] data[17] data[18] data[19] data[20] } {+ data[21] data[22] data[23] data[24] data[25] data[26] data[27] data[28] } {+ data[29] data[30] data[31] out1[0] out1[1] out1[2] out1[3] out1[4] } {+ out1[5] out1[6] out1[7] out1[8] out1[9] out1[10] out1[11] out1[12] } {+ out1[13] out1[14] out1[15] out1[16] out1[17] out1[18] out1[19] out1[20] } {+ out1[21] out1[22] out1[23] out1[24] out1[25] out1[26] out1[27] out1[28] } {+ out1[29] out1[30] out1[31] out2[0] out2[1] out2[2] out2[3] out2[4] } {+ out2[5] out2[6] out2[7] out2[8] out2[9] out2[10] out2[11] out2[12] } {+ out2[13] out2[14] out2[15] out2[16] out2[17] out2[18] out2[19] out2[20] } {+ out2[21] out2[22] out2[23] out2[24] out2[25] out2[26] out2[27] out2[28] } {+ out2[29] out2[30] out2[31] w[7] Reg_32bit } {XReg_32bit_7 inR1[8] inR2[8] data[0] data[1] data[2] data[3] data[4] } {+ data[5] data[6] data[7] data[8] data[9] data[10] data[11] data[12] } {+ data[13] data[14] data[15] data[16] data[17] data[18] data[19] data[20] } {+ data[21] data[22] data[23] data[24] data[25] data[26] data[27] data[28] } {+ data[29] data[30] data[31] out1[0] out1[1] out1[2] out1[3] out1[4] } {+ out1[5] out1[6] out1[7] out1[8] out1[9] out1[10] out1[11] out1[12] } {+ out1[13] out1[14] out1[15] out1[16] out1[17] out1[18] out1[19] out1[20] } {+ out1[21] out1[22] out1[23] out1[24] out1[25] out1[26] out1[27] out1[28] } {+ out1[29] out1[30] out1[31] out2[0] out2[1] out2[2] out2[3] out2[4] } {+ out2[5] out2[6] out2[7] out2[8] out2[9] out2[10] out2[11] out2[12] } {+ out2[13] out2[14] out2[15] out2[16] out2[17] out2[18] out2[19] out2[20] } {+ out2[21] out2[22] out2[23] out2[24] out2[25] out2[26] out2[27] out2[28] } {+ out2[29] out2[30] out2[31] w[8] Reg_32bit } {XReg_32bit_8 inR1[9] inR2[9] data[0] data[1] data[2] data[3] data[4] } {+ data[5] data[6] data[7] data[8] data[9] data[10] data[11] data[12] } {+ data[13] data[14] data[15] data[16] data[17] data[18] data[19] data[20] } {+ data[21] data[22] data[23] data[24] data[25] data[26] data[27] data[28] } {+ data[29] data[30] data[31] out1[0] out1[1] out1[2] out1[3] out1[4] } {+ out1[5] out1[6] out1[7] out1[8] out1[9] out1[10] out1[11] out1[12] } {+ out1[13] out1[14] out1[15] out1[16] out1[17] out1[18] out1[19] out1[20] } {+ out1[21] out1[22] out1[23] out1[24] out1[25] out1[26] out1[27] out1[28] } {+ out1[29] out1[30] out1[31] out2[0] out2[1] out2[2] out2[3] out2[4] } {+ out2[5] out2[6] out2[7] out2[8] out2[9] out2[10] out2[11] out2[12] } {+ out2[13] out2[14] out2[15] out2[16] out2[17] out2[18] out2[19] out2[20] } {+ out2[21] out2[22] out2[23] out2[24] out2[25] out2[26] out2[27] out2[28] } {+ out2[29] out2[30] out2[31] w[9] Reg_32bit } {XReg_32bit_9 inR1[10] inR2[10] data[0] data[1] data[2] data[3] data[4] } {+ data[5] data[6] data[7] data[8] data[9] data[10] data[11] data[12] } {+ data[13] data[14] data[15] data[16] data[17] data[18] data[19] data[20] } {+ data[21] data[22] data[23] data[24] data[25] data[26] data[27] data[28] } {+ data[29] data[30] data[31] out1[0] out1[1] out1[2] out1[3] out1[4] } {+ out1[5] out1[6] out1[7] out1[8] out1[9] out1[10] out1[11] out1[12] } {+ out1[13] out1[14] out1[15] out1[16] out1[17] out1[18] out1[19] out1[20] } {+ out1[21] out1[22] out1[23] out1[24] out1[25] out1[26] out1[27] out1[28] } {+ out1[29] out1[30] out1[31] out2[0] out2[1] out2[2] out2[3] out2[4] } {+ out2[5] out2[6] out2[7] out2[8] out2[9] out2[10] out2[11] out2[12] } {+ out2[13] out2[14] out2[15] out2[16] out2[17] out2[18] out2[19] out2[20] } {+ out2[21] out2[22] out2[23] out2[24] out2[25] out2[26] out2[27] out2[28] } {+ out2[29] out2[30] out2[31] w[10] Reg_32bit } {XReg_32bit_10 inR1[11] inR2[11] data[0] data[1] data[2] data[3] data[4] } {+ data[5] data[6] data[7] data[8] data[9] data[10] data[11] data[12] } {+ data[13] data[14] data[15] data[16] data[17] data[18] data[19] data[20] } {+ data[21] data[22] data[23] data[24] data[25] data[26] data[27] data[28] } {+ data[29] data[30] data[31] out1[0] out1[1] out1[2] out1[3] out1[4] } {+ out1[5] out1[6] out1[7] out1[8] out1[9] out1[10] out1[11] out1[12] } {+ out1[13] out1[14] out1[15] out1[16] out1[17] out1[18] out1[19] out1[20] } {+ out1[21] out1[22] out1[23] out1[24] out1[25] out1[26] out1[27] out1[28] } {+ out1[29] out1[30] out1[31] out2[0] out2[1] out2[2] out2[3] out2[4] } {+ out2[5] out2[6] out2[7] out2[8] out2[9] out2[10] out2[11] out2[12] } {+ out2[13] out2[14] out2[15] out2[16] out2[17] out2[18] out2[19] out2[20] } {+ out2[21] out2[22] out2[23] out2[24] out2[25] out2[26] out2[27] out2[28] } {+ out2[29] out2[30] out2[31] w[11] Reg_32bit } {XReg_32bit_11 inR1[12] inR2[12] data[0] data[1] data[2] data[3] data[4] } {+ data[5] data[6] data[7] data[8] data[9] data[10] data[11] data[12] } {+ data[13] data[14] data[15] data[16] data[17] data[18] data[19] data[20] } {+ data[21] data[22] data[23] data[24] data[25] data[26] data[27] data[28] } {+ data[29] data[30] data[31] out1[0] out1[1] out1[2] out1[3] out1[4] } {+ out1[5] out1[6] out1[7] out1[8] out1[9] out1[10] out1[11] out1[12] } {+ out1[13] out1[14] out1[15] out1[16] out1[17] out1[18] out1[19] out1[20] } {+ out1[21] out1[22] out1[23] out1[24] out1[25] out1[26] out1[27] out1[28] } {+ out1[29] out1[30] out1[31] out2[0] out2[1] out2[2] out2[3] out2[4] } {+ out2[5] out2[6] out2[7] out2[8] out2[9] out2[10] out2[11] out2[12] } {+ out2[13] out2[14] out2[15] out2[16] out2[17] out2[18] out2[19] out2[20] } {+ out2[21] out2[22] out2[23] out2[24] out2[25] out2[26] out2[27] out2[28] } {+ out2[29] out2[30] out2[31] w[12] Reg_32bit } {XReg_32bit_12 inR1[13] inR2[13] data[0] data[1] data[2] data[3] data[4] } {+ data[5] data[6] data[7] data[8] data[9] data[10] data[11] data[12] } {+ data[13] data[14] data[15] data[16] data[17] data[18] data[19] data[20] } {+ data[21] data[22] data[23] data[24] data[25] data[26] data[27] data[28] } {+ data[29] data[30] data[31] out1[0] out1[1] out1[2] out1[3] out1[4] } {+ out1[5] out1[6] out1[7] out1[8] out1[9] out1[10] out1[11] out1[12] } {+ out1[13] out1[14] out1[15] out1[16] out1[17] out1[18] out1[19] out1[20] } {+ out1[21] out1[22] out1[23] out1[24] out1[25] out1[26] out1[27] out1[28] } {+ out1[29] out1[30] out1[31] out2[0] out2[1] out2[2] out2[3] out2[4] } {+ out2[5] out2[6] out2[7] out2[8] out2[9] out2[10] out2[11] out2[12] } {+ out2[13] out2[14] out2[15] out2[16] out2[17] out2[18] out2[19] out2[20] } {+ out2[21] out2[22] out2[23] out2[24] out2[25] out2[26] out2[27] out2[28] } {+ out2[29] out2[30] out2[31] w[13] Reg_32bit } {XReg_32bit_13 inR1[14] inR2[14] data[0] data[1] data[2] data[3] data[4] } {+ data[5] data[6] data[7] data[8] data[9] data[10] data[11] data[12] } {+ data[13] data[14] data[15] data[16] data[17] data[18] data[19] data[20] } {+ data[21] data[22] data[23] data[24] data[25] data[26] data[27] data[28] } {+ data[29] data[30] data[31] out1[0] out1[1] out1[2] out1[3] out1[4] } {+ out1[5] out1[6] out1[7] out1[8] out1[9] out1[10] out1[11] out1[12] } {+ out1[13] out1[14] out1[15] out1[16] out1[17] out1[18] out1[19] out1[20] } {+ out1[21] out1[22] out1[23] out1[24] out1[25] out1[26] out1[27] out1[28] } {+ out1[29] out1[30] out1[31] out2[0] out2[1] out2[2] out2[3] out2[4] } {+ out2[5] out2[6] out2[7] out2[8] out2[9] out2[10] out2[11] out2[12] } {+ out2[13] out2[14] out2[15] out2[16] out2[17] out2[18] out2[19] out2[20] } {+ out2[21] out2[22] out2[23] out2[24] out2[25] out2[26] out2[27] out2[28] } {+ out2[29] out2[30] out2[31] w[14] Reg_32bit } {XReg_32bit_14 inR1[15] inR2[15] data[0] data[1] data[2] data[3] data[4] } {+ data[5] data[6] data[7] data[8] data[9] data[10] data[11] data[12] } {+ data[13] data[14] data[15] data[16] data[17] data[18] data[19] data[20] } {+ data[21] data[22] data[23] data[24] data[25] data[26] data[27] data[28] } {+ data[29] data[30] data[31] out1[0] out1[1] out1[2] out1[3] out1[4] } {+ out1[5] out1[6] out1[7] out1[8] out1[9] out1[10] out1[11] out1[12] } {+ out1[13] out1[14] out1[15] out1[16] out1[17] out1[18] out1[19] out1[20] } {+ out1[21] out1[22] out1[23] out1[24] out1[25] out1[26] out1[27] out1[28] } {+ out1[29] out1[30] out1[31] out2[0] out2[1] out2[2] out2[3] out2[4] } {+ out2[5] out2[6] out2[7] out2[8] out2[9] out2[10] out2[11] out2[12] } {+ out2[13] out2[14] out2[15] out2[16] out2[17] out2[18] out2[19] out2[20] } {+ out2[21] out2[22] out2[23] out2[24] out2[25] out2[26] out2[27] out2[28] } {+ out2[29] out2[30] out2[31] w[15] Reg_32bit } {XReg_32bit_15 inR1[16] inR2[16] data[0] data[1] data[2] data[3] data[4] } {+ data[5] data[6] data[7] data[8] data[9] data[10] data[11] data[12] } {+ data[13] data[14] data[15] data[16] data[17] data[18] data[19] data[20] } {+ data[21] data[22] data[23] data[24] data[25] data[26] data[27] data[28] } {+ data[29] data[30] data[31] out1[0] out1[1] out1[2] out1[3] out1[4] } {+ out1[5] out1[6] out1[7] out1[8] out1[9] out1[10] out1[11] out1[12] } {+ out1[13] out1[14] out1[15] out1[16] out1[17] out1[18] out1[19] out1[20] } {+ out1[21] out1[22] out1[23] out1[24] out1[25] out1[26] out1[27] out1[28] } {+ out1[29] out1[30] out1[31] out2[0] out2[1] out2[2] out2[3] out2[4] } {+ out2[5] out2[6] out2[7] out2[8] out2[9] out2[10] out2[11] out2[12] } {+ out2[13] out2[14] out2[15] out2[16] out2[17] out2[18] out2[19] out2[20] } {+ out2[21] out2[22] out2[23] out2[24] out2[25] out2[26] out2[27] out2[28] } {+ out2[29] out2[30] out2[31] w[16] Reg_32bit } {XReg_32bit_16 inR1[17] inR2[17] data[0] data[1] data[2] data[3] data[4] } {+ data[5] data[6] data[7] data[8] data[9] data[10] data[11] data[12] } {+ data[13] data[14] data[15] data[16] data[17] data[18] data[19] data[20] } {+ data[21] data[22] data[23] data[24] data[25] data[26] data[27] data[28] } {+ data[29] data[30] data[31] out1[0] out1[1] out1[2] out1[3] out1[4] } {+ out1[5] out1[6] out1[7] out1[8] out1[9] out1[10] out1[11] out1[12] } {+ out1[13] out1[14] out1[15] out1[16] out1[17] out1[18] out1[19] out1[20] } {+ out1[21] out1[22] out1[23] out1[24] out1[25] out1[26] out1[27] out1[28] } {+ out1[29] out1[30] out1[31] out2[0] out2[1] out2[2] out2[3] out2[4] } {+ out2[5] out2[6] out2[7] out2[8] out2[9] out2[10] out2[11] out2[12] } {+ out2[13] out2[14] out2[15] out2[16] out2[17] out2[18] out2[19] out2[20] } {+ out2[21] out2[22] out2[23] out2[24] out2[25] out2[26] out2[27] out2[28] } {+ out2[29] out2[30] out2[31] w[17] Reg_32bit } {XReg_32bit_17 inR1[18] inR2[18] data[0] data[1] data[2] data[3] data[4] } {+ data[5] data[6] data[7] data[8] data[9] data[10] data[11] data[12] } {+ data[13] data[14] data[15] data[16] data[17] data[18] data[19] data[20] } {+ data[21] data[22] data[23] data[24] data[25] data[26] data[27] data[28] } {+ data[29] data[30] data[31] out1[0] out1[1] out1[2] out1[3] out1[4] } {+ out1[5] out1[6] out1[7] out1[8] out1[9] out1[10] out1[11] out1[12] } {+ out1[13] out1[14] out1[15] out1[16] out1[17] out1[18] out1[19] out1[20] } {+ out1[21] out1[22] out1[23] out1[24] out1[25] out1[26] out1[27] out1[28] } {+ out1[29] out1[30] out1[31] out2[0] out2[1] out2[2] out2[3] out2[4] } {+ out2[5] out2[6] out2[7] out2[8] out2[9] out2[10] out2[11] out2[12] } {+ out2[13] out2[14] out2[15] out2[16] out2[17] out2[18] out2[19] out2[20] } {+ out2[21] out2[22] out2[23] out2[24] out2[25] out2[26] out2[27] out2[28] } {+ out2[29] out2[30] out2[31] w[18] Reg_32bit } {XReg_32bit_18 inR1[19] inR2[19] data[0] data[1] data[2] data[3] data[4] } {+ data[5] data[6] data[7] data[8] data[9] data[10] data[11] data[12] } {+ data[13] data[14] data[15] data[16] data[17] data[18] data[19] data[20] } {+ data[21] data[22] data[23] data[24] data[25] data[26] data[27] data[28] } {+ data[29] data[30] data[31] out1[0] out1[1] out1[2] out1[3] out1[4] } {+ out1[5] out1[6] out1[7] out1[8] out1[9] out1[10] out1[11] out1[12] } {+ out1[13] out1[14] out1[15] out1[16] out1[17] out1[18] out1[19] out1[20] } {+ out1[21] out1[22] out1[23] out1[24] out1[25] out1[26] out1[27] out1[28] } {+ out1[29] out1[30] out1[31] out2[0] out2[1] out2[2] out2[3] out2[4] } {+ out2[5] out2[6] out2[7] out2[8] out2[9] out2[10] out2[11] out2[12] } {+ out2[13] out2[14] out2[15] out2[16] out2[17] out2[18] out2[19] out2[20] } {+ out2[21] out2[22] out2[23] out2[24] out2[25] out2[26] out2[27] out2[28] } {+ out2[29] out2[30] out2[31] w[19] Reg_32bit } {XReg_32bit_19 inR1[20] inR2[20] data[0] data[1] data[2] data[3] data[4] } {+ data[5] data[6] data[7] data[8] data[9] data[10] data[11] data[12] } {+ data[13] data[14] data[15] data[16] data[17] data[18] data[19] data[20] } {+ data[21] data[22] data[23] data[24] data[25] data[26] data[27] data[28] } {+ data[29] data[30] data[31] out1[0] out1[1] out1[2] out1[3] out1[4] } {+ out1[5] out1[6] out1[7] out1[8] out1[9] out1[10] out1[11] out1[12] } {+ out1[13] out1[14] out1[15] out1[16] out1[17] out1[18] out1[19] out1[20] } {+ out1[21] out1[22] out1[23] out1[24] out1[25] out1[26] out1[27] out1[28] } {+ out1[29] out1[30] out1[31] out2[0] out2[1] out2[2] out2[3] out2[4] } {+ out2[5] out2[6] out2[7] out2[8] out2[9] out2[10] out2[11] out2[12] } {+ out2[13] out2[14] out2[15] out2[16] out2[17] out2[18] out2[19] out2[20] } {+ out2[21] out2[22] out2[23] out2[24] out2[25] out2[26] out2[27] out2[28] } {+ out2[29] out2[30] out2[31] w[20] Reg_32bit } {XReg_32bit_20 inR1[21] inR2[21] data[0] data[1] data[2] data[3] data[4] } {+ data[5] data[6] data[7] data[8] data[9] data[10] data[11] data[12] } {+ data[13] data[14] data[15] data[16] data[17] data[18] data[19] data[20] } {+ data[21] data[22] data[23] data[24] data[25] data[26] data[27] data[28] } {+ data[29] data[30] data[31] out1[0] out1[1] out1[2] out1[3] out1[4] } {+ out1[5] out1[6] out1[7] out1[8] out1[9] out1[10] out1[11] out1[12] } {+ out1[13] out1[14] out1[15] out1[16] out1[17] out1[18] out1[19] out1[20] } {+ out1[21] out1[22] out1[23] out1[24] out1[25] out1[26] out1[27] out1[28] } {+ out1[29] out1[30] out1[31] out2[0] out2[1] out2[2] out2[3] out2[4] } {+ out2[5] out2[6] out2[7] out2[8] out2[9] out2[10] out2[11] out2[12] } {+ out2[13] out2[14] out2[15] out2[16] out2[17] out2[18] out2[19] out2[20] } {+ out2[21] out2[22] out2[23] out2[24] out2[25] out2[26] out2[27] out2[28] } {+ out2[29] out2[30] out2[31] w[21] Reg_32bit } {XReg_32bit_21 inR1[22] inR2[22] data[0] data[1] data[2] data[3] data[4] } {+ data[5] data[6] data[7] data[8] data[9] data[10] data[11] data[12] } {+ data[13] data[14] data[15] data[16] data[17] data[18] data[19] data[20] } {+ data[21] data[22] data[23] data[24] data[25] data[26] data[27] data[28] } {+ data[29] data[30] data[31] out1[0] out1[1] out1[2] out1[3] out1[4] } {+ out1[5] out1[6] out1[7] out1[8] out1[9] out1[10] out1[11] out1[12] } {+ out1[13] out1[14] out1[15] out1[16] out1[17] out1[18] out1[19] out1[20] } {+ out1[21] out1[22] out1[23] out1[24] out1[25] out1[26] out1[27] out1[28] } {+ out1[29] out1[30] out1[31] out2[0] out2[1] out2[2] out2[3] out2[4] } {+ out2[5] out2[6] out2[7] out2[8] out2[9] out2[10] out2[11] out2[12] } {+ out2[13] out2[14] out2[15] out2[16] out2[17] out2[18] out2[19] out2[20] } {+ out2[21] out2[22] out2[23] out2[24] out2[25] out2[26] out2[27] out2[28] } {+ out2[29] out2[30] out2[31] w[22] Reg_32bit } {XReg_32bit_22 inR1[23] inR2[23] data[0] data[1] data[2] data[3] data[4] } {+ data[5] data[6] data[7] data[8] data[9] data[10] data[11] data[12] } {+ data[13] data[14] data[15] data[16] data[17] data[18] data[19] data[20] } {+ data[21] data[22] data[23] data[24] data[25] data[26] data[27] data[28] } {+ data[29] data[30] data[31] out1[0] out1[1] out1[2] out1[3] out1[4] } {+ out1[5] out1[6] out1[7] out1[8] out1[9] out1[10] out1[11] out1[12] } {+ out1[13] out1[14] out1[15] out1[16] out1[17] out1[18] out1[19] out1[20] } {+ out1[21] out1[22] out1[23] out1[24] out1[25] out1[26] out1[27] out1[28] } {+ out1[29] out1[30] out1[31] out2[0] out2[1] out2[2] out2[3] out2[4] } {+ out2[5] out2[6] out2[7] out2[8] out2[9] out2[10] out2[11] out2[12] } {+ out2[13] out2[14] out2[15] out2[16] out2[17] out2[18] out2[19] out2[20] } {+ out2[21] out2[22] out2[23] out2[24] out2[25] out2[26] out2[27] out2[28] } {+ out2[29] out2[30] out2[31] w[23] Reg_32bit } {XReg_32bit_23 inR1[24] inR2[24] data[0] data[1] data[2] data[3] data[4] } {+ data[5] data[6] data[7] data[8] data[9] data[10] data[11] data[12] } {+ data[13] data[14] data[15] data[16] data[17] data[18] data[19] data[20] } {+ data[21] data[22] data[23] data[24] data[25] data[26] data[27] data[28] } {+ data[29] data[30] data[31] out1[0] out1[1] out1[2] out1[3] out1[4] } {+ out1[5] out1[6] out1[7] out1[8] out1[9] out1[10] out1[11] out1[12] } {+ out1[13] out1[14] out1[15] out1[16] out1[17] out1[18] out1[19] out1[20] } {+ out1[21] out1[22] out1[23] out1[24] out1[25] out1[26] out1[27] out1[28] } {+ out1[29] out1[30] out1[31] out2[0] out2[1] out2[2] out2[3] out2[4] } {+ out2[5] out2[6] out2[7] out2[8] out2[9] out2[10] out2[11] out2[12] } {+ out2[13] out2[14] out2[15] out2[16] out2[17] out2[18] out2[19] out2[20] } {+ out2[21] out2[22] out2[23] out2[24] out2[25] out2[26] out2[27] out2[28] } {+ out2[29] out2[30] out2[31] w[24] Reg_32bit } {XReg_32bit_24 inR1[25] inR2[25] data[0] data[1] data[2] data[3] data[4] } {+ data[5] data[6] data[7] data[8] data[9] data[10] data[11] data[12] } {+ data[13] data[14] data[15] data[16] data[17] data[18] data[19] data[20] } {+ data[21] data[22] data[23] data[24] data[25] data[26] data[27] data[28] } {+ data[29] data[30] data[31] out1[0] out1[1] out1[2] out1[3] out1[4] } {+ out1[5] out1[6] out1[7] out1[8] out1[9] out1[10] out1[11] out1[12] } {+ out1[13] out1[14] out1[15] out1[16] out1[17] out1[18] out1[19] out1[20] } {+ out1[21] out1[22] out1[23] out1[24] out1[25] out1[26] out1[27] out1[28] } {+ out1[29] out1[30] out1[31] out2[0] out2[1] out2[2] out2[3] out2[4] } {+ out2[5] out2[6] out2[7] out2[8] out2[9] out2[10] out2[11] out2[12] } {+ out2[13] out2[14] out2[15] out2[16] out2[17] out2[18] out2[19] out2[20] } {+ out2[21] out2[22] out2[23] out2[24] out2[25] out2[26] out2[27] out2[28] } {+ out2[29] out2[30] out2[31] w[25] Reg_32bit } {XReg_32bit_25 inR1[26] inR2[26] data[0] data[1] data[2] data[3] data[4] } {+ data[5] data[6] data[7] data[8] data[9] data[10] data[11] data[12] } {+ data[13] data[14] data[15] data[16] data[17] data[18] data[19] data[20] } {+ data[21] data[22] data[23] data[24] data[25] data[26] data[27] data[28] } {+ data[29] data[30] data[31] out1[0] out1[1] out1[2] out1[3] out1[4] } {+ out1[5] out1[6] out1[7] out1[8] out1[9] out1[10] out1[11] out1[12] } {+ out1[13] out1[14] out1[15] out1[16] out1[17] out1[18] out1[19] out1[20] } {+ out1[21] out1[22] out1[23] out1[24] out1[25] out1[26] out1[27] out1[28] } {+ out1[29] out1[30] out1[31] out2[0] out2[1] out2[2] out2[3] out2[4] } {+ out2[5] out2[6] out2[7] out2[8] out2[9] out2[10] out2[11] out2[12] } {+ out2[13] out2[14] out2[15] out2[16] out2[17] out2[18] out2[19] out2[20] } {+ out2[21] out2[22] out2[23] out2[24] out2[25] out2[26] out2[27] out2[28] } {+ out2[29] out2[30] out2[31] w[26] Reg_32bit } {XReg_32bit_26 inR1[27] inR2[27] data[0] data[1] data[2] data[3] data[4] } {+ data[5] data[6] data[7] data[8] data[9] data[10] data[11] data[12] } {+ data[13] data[14] data[15] data[16] data[17] data[18] data[19] data[20] } {+ data[21] data[22] data[23] data[24] data[25] data[26] data[27] data[28] } {+ data[29] data[30] data[31] out1[0] out1[1] out1[2] out1[3] out1[4] } {+ out1[5] out1[6] out1[7] out1[8] out1[9] out1[10] out1[11] out1[12] } {+ out1[13] out1[14] out1[15] out1[16] out1[17] out1[18] out1[19] out1[20] } {+ out1[21] out1[22] out1[23] out1[24] out1[25] out1[26] out1[27] out1[28] } {+ out1[29] out1[30] out1[31] out2[0] out2[1] out2[2] out2[3] out2[4] } {+ out2[5] out2[6] out2[7] out2[8] out2[9] out2[10] out2[11] out2[12] } {+ out2[13] out2[14] out2[15] out2[16] out2[17] out2[18] out2[19] out2[20] } {+ out2[21] out2[22] out2[23] out2[24] out2[25] out2[26] out2[27] out2[28] } {+ out2[29] out2[30] out2[31] w[27] Reg_32bit } {XReg_32bit_27 inR1[28] inR2[28] data[0] data[1] data[2] data[3] data[4] } {+ data[5] data[6] data[7] data[8] data[9] data[10] data[11] data[12] } {+ data[13] data[14] data[15] data[16] data[17] data[18] data[19] data[20] } {+ data[21] data[22] data[23] data[24] data[25] data[26] data[27] data[28] } {+ data[29] data[30] data[31] out1[0] out1[1] out1[2] out1[3] out1[4] } {+ out1[5] out1[6] out1[7] out1[8] out1[9] out1[10] out1[11] out1[12] } {+ out1[13] out1[14] out1[15] out1[16] out1[17] out1[18] out1[19] out1[20] } {+ out1[21] out1[22] out1[23] out1[24] out1[25] out1[26] out1[27] out1[28] } {+ out1[29] out1[30] out1[31] out2[0] out2[1] out2[2] out2[3] out2[4] } {+ out2[5] out2[6] out2[7] out2[8] out2[9] out2[10] out2[11] out2[12] } {+ out2[13] out2[14] out2[15] out2[16] out2[17] out2[18] out2[19] out2[20] } {+ out2[21] out2[22] out2[23] out2[24] out2[25] out2[26] out2[27] out2[28] } {+ out2[29] out2[30] out2[31] w[28] Reg_32bit } {XReg_32bit_28 inR1[29] inR2[29] data[0] data[1] data[2] data[3] data[4] } {+ data[5] data[6] data[7] data[8] data[9] data[10] data[11] data[12] } {+ data[13] data[14] data[15] data[16] data[17] data[18] data[19] data[20] } {+ data[21] data[22] data[23] data[24] data[25] data[26] data[27] data[28] } {+ data[29] data[30] data[31] out1[0] out1[1] out1[2] out1[3] out1[4] } {+ out1[5] out1[6] out1[7] out1[8] out1[9] out1[10] out1[11] out1[12] } {+ out1[13] out1[14] out1[15] out1[16] out1[17] out1[18] out1[19] out1[20] } {+ out1[21] out1[22] out1[23] out1[24] out1[25] out1[26] out1[27] out1[28] } {+ out1[29] out1[30] out1[31] out2[0] out2[1] out2[2] out2[3] out2[4] } {+ out2[5] out2[6] out2[7] out2[8] out2[9] out2[10] out2[11] out2[12] } {+ out2[13] out2[14] out2[15] out2[16] out2[17] out2[18] out2[19] out2[20] } {+ out2[21] out2[22] out2[23] out2[24] out2[25] out2[26] out2[27] out2[28] } {+ out2[29] out2[30] out2[31] w[29] Reg_32bit } {XReg_32bit_29 inR1[30] inR2[30] data[0] data[1] data[2] data[3] data[4] } {+ data[5] data[6] data[7] data[8] data[9] data[10] data[11] data[12] } {+ data[13] data[14] data[15] data[16] data[17] data[18] data[19] data[20] } {+ data[21] data[22] data[23] data[24] data[25] data[26] data[27] data[28] } {+ data[29] data[30] data[31] out1[0] out1[1] out1[2] out1[3] out1[4] } {+ out1[5] out1[6] out1[7] out1[8] out1[9] out1[10] out1[11] out1[12] } {+ out1[13] out1[14] out1[15] out1[16] out1[17] out1[18] out1[19] out1[20] } {+ out1[21] out1[22] out1[23] out1[24] out1[25] out1[26] out1[27] out1[28] } {+ out1[29] out1[30] out1[31] out2[0] out2[1] out2[2] out2[3] out2[4] } {+ out2[5] out2[6] out2[7] out2[8] out2[9] out2[10] out2[11] out2[12] } {+ out2[13] out2[14] out2[15] out2[16] out2[17] out2[18] out2[19] out2[20] } {+ out2[21] out2[22] out2[23] out2[24] out2[25] out2[26] out2[27] out2[28] } {+ out2[29] out2[30] out2[31] w[30] Reg_32bit } {XReg_32bit_30 inR1[31] inR2[31] data[0] data[1] data[2] data[3] data[4] } {+ data[5] data[6] data[7] data[8] data[9] data[10] data[11] data[12] } {+ data[13] data[14] data[15] data[16] data[17] data[18] data[19] data[20] } {+ data[21] data[22] data[23] data[24] data[25] data[26] data[27] data[28] } {+ data[29] data[30] data[31] out1[0] out1[1] out1[2] out1[3] out1[4] } {+ out1[5] out1[6] out1[7] out1[8] out1[9] out1[10] out1[11] out1[12] } {+ out1[13] out1[14] out1[15] out1[16] out1[17] out1[18] out1[19] out1[20] } {+ out1[21] out1[22] out1[23] out1[24] out1[25] out1[26] out1[27] out1[28] } {+ out1[29] out1[30] out1[31] out2[0] out2[1] out2[2] out2[3] out2[4] } {+ out2[5] out2[6] out2[7] out2[8] out2[9] out2[10] out2[11] out2[12] } {+ out2[13] out2[14] out2[15] out2[16] out2[17] out2[18] out2[19] out2[20] } {+ out2[21] out2[22] out2[23] out2[24] out2[25] out2[26] out2[27] out2[28] } {+ out2[29] out2[30] out2[31] w[31] Reg_32bit } {* .ENDS	$ Register_file_32bits} {}}
set NETLIST_CACHE(Register_file_32bits,names) {{850 1380 {0 inR2[12]}} {850 2120 {0 w[18]}} {200 270 {1 R2[31:0]}} {940 2580 {0 XReg_32bit_21}} {810 2360 {1 w[20]}} {850 610 {0 data[31:0]}} {810 3090 {1 w[26]}} {1050 2230 {0 out2[31:0]}} {850 10 {0 data[31:0]}} {850 2440 {0 inR1[21]}} {850 290 {0 inR2[3]}} {850 3170 {0 inR1[27]}} {740 3310 {1 inR2[28]}} {850 1400 {0 w[12]}} {740 170 {1 inR2[2]}} {1050 -80 {0 out1[31:0]}} {940 1860 {0 XReg_32bit_15}} {810 1640 {1 w[14]}} {1050 420 {0 out2[31:0]}} {1050 60 {0 out2[31:0]}} {940 530 {0 XReg_32bit_4}} {1200 2800 {1 out1[31:0]}} {1050 1510 {0 out2[31:0]}} {1200 3530 {1 out1[31:0]}} {1200 1120 {1 out1[31:0]}} {850 1720 {0 inR1[15]}} {850 310 {0 w[3]}} {740 2580 {1 inR2[22]}} {1200 870 {1 out1[31:0]}} {810 190 {1 w[2]}} {700 2200 {1 inR1[19]}} {1100 3680 {1 out2[31:0]}} {1100 540 {1 out2[31:0]}} {1050 2560 {0 out1[31:0]}} {1100 1270 {1 out2[31:0]}} {1050 3290 {0 out1[31:0]}} {850 630 {0 inR1[6]}} {850 3510 {0 data[31:0]}} {850 1100 {0 data[31:0]}} {850 30 {0 inR1[1]}} {140 400 {0 net_1[31:0]}} {850 2460 {0 inR2[21]}} {740 1860 {1 inR2[16]}} {1050 750 {0 out1[31:0]}} {850 3190 {0 inR2[27]}} {700 390 {1 inR1[4]}} {1100 2960 {1 out2[31:0]}} {1050 1840 {0 out1[31:0]}} {1200 30 {1 out1[31:0]}} {850 2780 {0 data[31:0]}} {850 1740 {0 inR2[15]}} {700 -70 {1 inR1[0]}} {850 3210 {0 w[27]}} {810 2720 {1 w[23]}} {700 1480 {1 inR1[13]}} {940 3670 {0 XReg_32bit_30}} {810 3450 {1 w[29]}} {940 1260 {0 XReg_32bit_10}} {810 1040 {1 w[9]}} {1050 3320 {0 out2[31:0]}} {1200 2200 {1 out1[31:0]}} {850 2800 {0 inR1[24]}} {850 650 {0 inR2[6]}} {850 3530 {0 inR1[30]}} {40 140 {0 XDec_5x32_2}} {850 1120 {0 inR1[10]}} {850 50 {0 inR2[1]}} {740 530 {1 inR2[5]}} {850 2480 {0 w[21]}} {1200 270 {1 out1[31:0]}} {1100 2350 {1 out2[31:0]}} {940 2950 {0 XReg_32bit_24}} {1100 3080 {1 out2[31:0]}} {1050 2590 {0 out2[31:0]}} {940 50 {0 XReg_32bit}} {810 550 {1 w[5]}} {740 3670 {1 inR2[31]}} {1100 900 {1 out2[31:0]}} {850 1760 {0 w[15]}} {740 1260 {1 inR2[11]}} {1100 1630 {1 out2[31:0]}} {1050 3650 {0 out1[31:0]}} {1050 150 {0 out1[31:0]}} {1050 780 {0 out2[31:0]}} {1050 1240 {0 out1[31:0]}} {940 890 {0 XReg_32bit_7}} {850 980 {0 data[31:0]}} {1050 1870 {0 out2[31:0]}} {1200 1480 {1 out1[31:0]}} {850 2180 {0 data[31:0]}} {850 2820 {0 inR2[24]}} {850 670 {0 w[6]}} {850 3550 {0 inR2[30]}} {740 2950 {1 inR2[25]}} {700 750 {1 inR1[7]}} {850 1140 {0 inR2[10]}} {700 2560 {1 inR1[22]}} {850 70 {0 w[1]}} {1050 2930 {0 out1[31:0]}} {700 3290 {1 inR1[28]}} {940 2340 {0 XReg_32bit_19}} {810 2120 {1 w[18]}} {940 3070 {0 XReg_32bit_25}} {850 1460 {0 data[31:0]}} {850 2200 {0 inR1[19]}} {500 410 {0 w[31:0]}} {700 1840 {1 inR1[16]}} {-60 270 {0 address_read2[4:0]} {2 address_read2[4:0]}} {940 1620 {0 XReg_32bit_13}} {810 1400 {1 w[12]}} {850 370 {0 data[31:0]}} {950 -60 {0 XReg0_32bit}} {700 30 {1 inR1[1]}} {140 140 {0 R1[31:0]}} {850 2840 {0 w[24]}} {740 2340 {1 inR2[20]}} {1200 630 {1 out1[31:0]}} {1100 2710 {1 out2[31:0]}} {850 3570 {0 w[30]}} {740 3070 {1 inR2[26]}} {1100 3440 {1 out2[31:0]}} {1100 300 {1 out2[31:0]}} {850 1160 {0 w[10]}} {1050 2320 {0 out1[31:0]}} {1100 1030 {1 out2[31:0]}} {1050 3050 {0 out1[31:0]}} {1050 3680 {0 out2[31:0]}} {1050 180 {0 out2[31:0]}} {850 -50 {0 inR2[0]}} {940 290 {0 XReg_32bit_2}} {1200 2560 {1 out1[31:0]}} {1050 1270 {0 out2[31:0]}} {1200 3290 {1 out1[31:0]}} {850 1480 {0 inR1[13]}} {810 910 {1 w[8]}} {850 2220 {0 inR2[19]}} {740 1620 {1 inR2[14]}} {740 890 {1 inR2[8]}} {1050 510 {0 out1[31:0]}} {700 150 {1 inR1[2]}} {1050 1600 {0 out1[31:0]}} {300 400 {0 net_1[31:0]}} {1050 2960 {0 out2[31:0]}} {1200 1840 {1 out1[31:0]}} {850 2540 {0 data[31:0]}} {850 390 {0 inR1[4]}} {850 3270 {0 data[31:0]}} {400 420 {0 XwriteEnable}} {850 1500 {0 inR2[13]}} {700 3650 {1 inR1[31]}} {1100 1990 {1 out2[31:0]}} {940 2700 {0 XReg_32bit_22}} {700 1240 {1 inR1[11]}} {940 3430 {0 XReg_32bit_28}} {810 3210 {1 w[27]}} {940 1020 {0 XReg_32bit_8}} {850 1820 {0 data[31:0]}} {850 -70 {0 inR1[0]}} {850 410 {0 inR2[4]}} {700 2930 {1 inR1[25]}} {850 2240 {0 w[19]}} {1100 2110 {1 out2[31:0]}} {810 2480 {1 w[21]}} {850 730 {0 data[31:0]}} {1050 2350 {0 out2[31:0]}} {1050 3080 {0 out2[31:0]}} {850 2560 {0 inR1[22]}} {850 3290 {0 inR1[28]}} {740 2700 {1 inR2[23]}} {810 310 {1 w[3]}} {740 3430 {1 inR2[29]}} {850 1520 {0 w[13]}} {740 1020 {1 inR2[9]}} {740 290 {1 inR2[3]}} {1050 3410 {0 out1[31:0]}} {940 1980 {0 XReg_32bit_16}} {810 1760 {1 w[15]}} {1050 540 {0 out2[31:0]}} {1050 1000 {0 out1[31:0]}} {940 650 {0 XReg_32bit_5}} {1050 1630 {0 out2[31:0]}} {1200 3650 {1 out1[31:0]}} {1200 1240 {1 out1[31:0]}} {300 430 {0 write_enable} {2 write_enable}} {850 1840 {0 inR1[16]}} {850 430 {0 w[4]}} {850 3310 {0 inR2[28]}} {700 510 {1 inR1[5]}} {700 2320 {1 inR1[20]}} {1100 660 {1 out2[31:0]}} {1050 2680 {0 out1[31:0]}} {700 3050 {1 inR1[26]}} {1100 1390 {1 out2[31:0]}} {940 2100 {0 XReg_32bit_17}} {1200 2930 {1 out1[31:0]}} {850 3630 {0 data[31:0]}} {850 750 {0 inR1[7]}} {850 1220 {0 data[31:0]}} {850 2580 {0 inR2[22]}} {740 1980 {1 inR2[17]}} {1050 870 {0 out1[31:0]}} {700 1600 {1 inR1[14]}} {1050 1960 {0 out1[31:0]}} {850 130 {0 data[31:0]}} {850 2910 {0 data[31:0]}} {850 1860 {0 inR2[16]}} {850 2600 {0 w[22]}} {740 2100 {1 inR2[18]}} {850 3330 {0 w[28]}} {810 2840 {1 w[24]}} {1100 3200 {1 out2[31:0]}} {810 3570 {1 w[30]}} {1050 2710 {0 out2[31:0]}} {940 1380 {0 XReg_32bit_11}} {810 1160 {1 w[10]}} {1050 3440 {0 out2[31:0]}} {1200 2320 {1 out1[31:0]}} {1050 1030 {0 out2[31:0]}} {1200 3050 {1 out1[31:0]}} {850 3650 {0 inR1[31]}} {850 770 {0 inR2[7]}} {850 1240 {0 inR1[11]}} {740 650 {1 inR2[6]}} {550 410 {1 w[31:0]}} {1200 390 {1 out1[31:0]}} {1100 2470 {1 out2[31:0]}} {600 10 {1 data[31:0]}} {1050 900 {0 out2[31:0]}} {1100 60 {1 out2[31:0]}} {1050 2080 {0 out1[31:0]}} {1200 1600 {1 out1[31:0]}} {850 2300 {0 data[31:0]}} {850 150 {0 inR1[2]}} {850 2930 {0 inR1[25]}} {850 3030 {0 data[31:0]}} {1100 -50 {1 out2[31:0]}} {40 270 {0 XDec_5x32_1}} {810 670 {1 w[6]}} {850 1880 {0 w[16]}} {740 1380 {1 inR2[12]}} {700 3410 {1 inR1[29]}} {200 140 {1 R1[31:0]}} {1100 1750 {1 out2[31:0]}} {1050 270 {0 out1[31:0]}} {700 1000 {1 inR1[9]}} {1050 1360 {0 out1[31:0]}} {1050 1990 {0 out2[31:0]}} {850 3670 {0 inR2[31]}} {850 790 {0 w[7]}} {700 870 {1 inR1[8]}} {850 1260 {0 inR2[11]}} {700 2680 {1 inR1[23]}} {850 2000 {0 w[17]}} {1200 -80 {1 out1[31:0]}} {940 2460 {0 XReg_32bit_20}} {810 2240 {1 w[19]}} {940 3190 {0 XReg_32bit_26}} {1050 2110 {0 out2[31:0]}} {850 1580 {0 data[31:0]}} {850 2320 {0 inR1[20]}} {850 170 {0 inR2[2]}} {850 2950 {0 inR2[25]}} {850 3050 {0 inR1[26]}} {700 1960 {1 inR1[17]}} {-60 400 {0 address_write[4:0]} {2 address_write[4:0]}} {940 1740 {0 XReg_32bit_14}} {810 1520 {1 w[13]}} {1050 300 {0 out2[31:0]}} {940 410 {0 XReg_32bit_3}} {850 490 {0 data[31:0]}} {1200 3410 {1 out1[31:0]}} {1200 1000 {1 out1[31:0]}} {850 1600 {0 inR1[14]}} {740 2460 {1 inR2[21]}} {1200 750 {1 out1[31:0]}} {1100 2830 {1 out2[31:0]}} {850 3690 {0 w[31]}} {740 3190 {1 inR2[27]}} {1100 3560 {1 out2[31:0]}} {1100 420 {1 out2[31:0]}} {850 1280 {0 w[11]}} {1050 2440 {0 out1[31:0]}} {1100 1150 {1 out2[31:0]}} {1050 3170 {0 out1[31:0]}} {1200 2680 {1 out1[31:0]}} {850 510 {0 inR1[5]}} {1050 1390 {0 out2[31:0]}} {740 -50 {1 inR2[0]}} {140 270 {0 R2[31:0]}} {850 2340 {0 inR2[20]}} {740 1740 {1 inR2[15]}} {850 190 {0 w[2]}} {1050 630 {0 out1[31:0]}} {850 2970 {0 w[25]}} {850 3070 {0 inR2[26]}} {810 70 {1 w[1]}} {700 270 {1 inR1[3]}} {1050 1720 {0 out1[31:0]}} {700 2080 {1 inR1[18]}} {1200 1960 {1 out1[31:0]}} {850 2660 {0 data[31:0]}} {850 3390 {0 data[31:0]}} {850 1620 {0 inR2[14]}} {940 2820 {0 XReg_32bit_23}} {810 2600 {1 w[22]}} {700 1360 {1 inR1[12]}} {940 3550 {0 XReg_32bit_29}} {810 3330 {1 w[28]}} {940 1140 {0 XReg_32bit_9}} {850 1940 {0 data[31:0]}} {1050 3200 {0 out2[31:0]}} {850 530 {0 inR2[5]}} {850 3410 {0 inR1[29]}} {850 1000 {0 inR1[9]}} {740 410 {1 inR2[4]}} {850 2360 {0 w[20]}} {1200 150 {1 out1[31:0]}} {1100 2230 {1 out2[31:0]}} {850 3090 {0 w[26]}} {850 850 {0 data[31:0]}} {1050 2470 {0 out2[31:0]}} {1200 2080 {1 out1[31:0]}} {850 2680 {0 inR1[23]}} {740 2820 {1 inR2[24]}} {810 430 {1 w[4]}} {740 3550 {1 inR2[30]}} {850 1640 {0 w[14]}} {1050 2800 {0 out1[31:0]}} {740 1140 {1 inR2[10]}} {1100 1510 {1 out2[31:0]}} {1050 3530 {0 out1[31:0]}} {810 1880 {1 w[16]}} {1050 660 {0 out2[31:0]}} {1050 1120 {0 out1[31:0]}} {940 770 {0 XReg_32bit_6}} {1050 1750 {0 out2[31:0]}} {1200 1360 {1 out1[31:0]}} {850 1960 {0 inR1[17]}} {850 2060 {0 data[31:0]}} {850 2700 {0 inR2[23]}} {850 550 {0 w[5]}} {850 3430 {0 inR2[29]}} {700 630 {1 inR1[6]}} {-60 140 {0 address_read1[4:0]} {2 address_read1[4:0]}} {850 1020 {0 inR2[9]}} {700 2440 {1 inR1[21]}} {1100 780 {1 out2[31:0]}} {700 3170 {1 inR1[27]}} {940 2220 {0 XReg_32bit_18}} {810 2000 {1 w[17]}} {850 870 {0 inR1[8]}} {850 1340 {0 data[31:0]}} {740 50 {1 inR2[1]}} {700 1720 {1 inR1[15]}} {940 1500 {0 XReg_32bit_12}} {850 250 {0 data[31:0]}} {850 1980 {0 inR2[17]}} {850 2080 {0 inR1[18]}} {850 2720 {0 w[23]}} {740 2220 {1 inR2[19]}} {1200 510 {1 out1[31:0]}} {850 3450 {0 w[29]}} {1100 3320 {1 out2[31:0]}} {850 1040 {0 w[9]}} {1050 2200 {0 out1[31:0]}} {810 3690 {1 w[31]}} {1050 2830 {0 out2[31:0]}} {810 1280 {1 w[11]}} {1050 3560 {0 out2[31:0]}} {940 170 {0 XReg_32bit_1}} {1200 2440 {1 out1[31:0]}} {1050 1150 {0 out2[31:0]}} {1200 3170 {1 out1[31:0]}} {850 890 {0 inR2[8]}} {850 1360 {0 inR1[12]}} {1050 -50 {0 out2[31:0]}} {850 2100 {0 inR2[18]}} {740 1500 {1 inR2[13]}} {740 770 {1 inR2[7]}} {1050 30 {0 out1[31:0]}} {1100 2590 {1 out2[31:0]}} {810 2970 {1 w[25]}} {1100 180 {1 out2[31:0]}} {1200 1720 {1 out1[31:0]}} {850 2420 {0 data[31:0]}} {850 270 {0 inR1[3]}} {850 3150 {0 data[31:0]}} {850 910 {0 w[8]}} {40 400 {0 XDec_5x32}} {810 790 {1 w[7]}} {700 2800 {1 inR1[24]}} {700 3530 {1 inR1[30]}} {1100 1870 {1 out2[31:0]}} {1050 390 {0 out1[31:0]}} {700 1120 {1 inR1[10]}} {1050 1480 {0 out1[31:0]}} {940 3310 {0 XReg_32bit_27}} {850 1700 {0 data[31:0]}}}
set NETLIST_CACHE(Register_file_32bits,wires) {{140 400 300 400 net_1[31:0]} {1050 -80 1200 -80 out1[31:0]} {1050 -50 1100 -50 out2[31:0]} {1050 30 1200 30 out1[31:0]} {1050 60 1100 60 out2[31:0]} {810 70 850 70 w[1]} {740 -50 850 -50 inR2[0]} {600 10 850 10 data[31:0]} {740 50 850 50 inR2[1]} {700 30 850 30 inR1[1]} {700 -70 850 -70 inR1[0]} {1050 150 1200 150 out1[31:0]} {1050 180 1100 180 out2[31:0]} {600 130 850 130 data[31:0]} {740 170 850 170 inR2[2]} {700 150 850 150 inR1[2]} {1050 270 1200 270 out1[31:0]} {1050 300 1100 300 out2[31:0]} {810 310 850 310 w[3]} {600 250 850 250 data[31:0]} {740 290 850 290 inR2[3]} {1050 390 1200 390 out1[31:0]} {1050 420 1100 420 out2[31:0]} {810 430 850 430 w[4]} {600 370 850 370 data[31:0]} {740 410 850 410 inR2[4]} {700 390 850 390 inR1[4]} {1050 510 1200 510 out1[31:0]} {1050 540 1100 540 out2[31:0]} {810 550 850 550 w[5]} {600 490 850 490 data[31:0]} {740 530 850 530 inR2[5]} {700 510 850 510 inR1[5]} {1050 630 1200 630 out1[31:0]} {1050 660 1100 660 out2[31:0]} {810 670 850 670 w[6]} {600 610 850 610 data[31:0]} {740 650 850 650 inR2[6]} {700 630 850 630 inR1[6]} {1050 750 1200 750 out1[31:0]} {1050 780 1100 780 out2[31:0]} {810 790 850 790 w[7]} {600 730 850 730 data[31:0]} {740 770 850 770 inR2[7]} {700 750 850 750 inR1[7]} {1050 870 1200 870 out1[31:0]} {1050 900 1100 900 out2[31:0]} {810 910 850 910 w[8]} {600 850 850 850 data[31:0]} {740 890 850 890 inR2[8]} {700 870 850 870 inR1[8]} {1050 1000 1200 1000 out1[31:0]} {1050 1030 1100 1030 out2[31:0]} {810 1040 850 1040 w[9]} {600 980 850 980 data[31:0]} {740 1020 850 1020 inR2[9]} {700 1000 850 1000 inR1[9]} {1050 1120 1200 1120 out1[31:0]} {1050 1150 1100 1150 out2[31:0]} {810 1160 850 1160 w[10]} {600 1100 850 1100 data[31:0]} {740 1140 850 1140 inR2[10]} {700 1120 850 1120 inR1[10]} {1050 1240 1200 1240 out1[31:0]} {1050 1270 1100 1270 out2[31:0]} {810 1280 850 1280 w[11]} {600 1220 850 1220 data[31:0]} {740 1260 850 1260 inR2[11]} {700 1240 850 1240 inR1[11]} {1050 1360 1200 1360 out1[31:0]} {1050 1390 1100 1390 out2[31:0]} {810 1400 850 1400 w[12]} {600 1340 850 1340 data[31:0]} {740 1380 850 1380 inR2[12]} {700 1360 850 1360 inR1[12]} {1050 1480 1200 1480 out1[31:0]} {1050 1510 1100 1510 out2[31:0]} {810 1520 850 1520 w[13]} {600 1460 850 1460 data[31:0]} {740 1500 850 1500 inR2[13]} {700 1480 850 1480 inR1[13]} {1050 1600 1200 1600 out1[31:0]} {1050 1630 1100 1630 out2[31:0]} {810 1640 850 1640 w[14]} {600 1580 850 1580 data[31:0]} {740 1620 850 1620 inR2[14]} {700 1600 850 1600 inR1[14]} {1050 1720 1200 1720 out1[31:0]} {1050 1750 1100 1750 out2[31:0]} {810 1760 850 1760 w[15]} {600 1700 850 1700 data[31:0]} {740 1740 850 1740 inR2[15]} {700 1720 850 1720 inR1[15]} {1050 1840 1200 1840 out1[31:0]} {1050 1870 1100 1870 out2[31:0]} {810 1880 850 1880 w[16]} {600 1820 850 1820 data[31:0]} {740 1860 850 1860 inR2[16]} {700 1840 850 1840 inR1[16]} {1050 1960 1200 1960 out1[31:0]} {1050 1990 1100 1990 out2[31:0]} {810 2000 850 2000 w[17]} {600 1940 850 1940 data[31:0]} {740 1980 850 1980 inR2[17]} {700 1960 850 1960 inR1[17]} {1050 2080 1200 2080 out1[31:0]} {1050 2110 1100 2110 out2[31:0]} {810 2120 850 2120 w[18]} {600 2060 850 2060 data[31:0]} {740 2100 850 2100 inR2[18]} {700 2080 850 2080 inR1[18]} {1050 2200 1200 2200 out1[31:0]} {1050 2230 1100 2230 out2[31:0]} {810 2240 850 2240 w[19]} {600 2180 850 2180 data[31:0]} {740 2220 850 2220 inR2[19]} {700 2200 850 2200 inR1[19]} {1050 2320 1200 2320 out1[31:0]} {1050 2350 1100 2350 out2[31:0]} {810 2360 850 2360 w[20]} {600 2300 850 2300 data[31:0]} {740 2340 850 2340 inR2[20]} {700 2320 850 2320 inR1[20]} {1050 2440 1200 2440 out1[31:0]} {1050 2470 1100 2470 out2[31:0]} {810 2480 850 2480 w[21]} {600 2420 850 2420 data[31:0]} {740 2460 850 2460 inR2[21]} {700 2440 850 2440 inR1[21]} {1050 2560 1200 2560 out1[31:0]} {1050 2590 1100 2590 out2[31:0]} {810 2600 850 2600 w[22]} {600 2540 850 2540 data[31:0]} {740 2580 850 2580 inR2[22]} {700 2560 850 2560 inR1[22]} {1050 2680 1200 2680 out1[31:0]} {1050 2710 1100 2710 out2[31:0]} {810 2720 850 2720 w[23]} {600 2660 850 2660 data[31:0]} {740 2700 850 2700 inR2[23]} {700 2680 850 2680 inR1[23]} {1050 2800 1200 2800 out1[31:0]} {1050 2830 1100 2830 out2[31:0]} {810 2840 850 2840 w[24]} {600 2780 850 2780 data[31:0]} {740 2820 850 2820 inR2[24]} {700 2800 850 2800 inR1[24]} {1050 2930 1200 2930 out1[31:0]} {1050 2960 1100 2960 out2[31:0]} {810 2970 850 2970 w[25]} {600 2910 850 2910 data[31:0]} {740 2950 850 2950 inR2[25]} {700 2930 850 2930 inR1[25]} {1050 3050 1200 3050 out1[31:0]} {1050 3080 1100 3080 out2[31:0]} {810 3090 850 3090 w[26]} {600 3030 850 3030 data[31:0]} {740 3070 850 3070 inR2[26]} {700 3050 850 3050 inR1[26]} {1050 3170 1200 3170 out1[31:0]} {1050 3200 1100 3200 out2[31:0]} {810 3210 850 3210 w[27]} {600 3150 850 3150 data[31:0]} {740 3190 850 3190 inR2[27]} {700 3170 850 3170 inR1[27]} {1050 3290 1200 3290 out1[31:0]} {1050 3320 1100 3320 out2[31:0]} {810 3330 850 3330 w[28]} {600 3270 850 3270 data[31:0]} {740 3310 850 3310 inR2[28]} {700 3290 850 3290 inR1[28]} {1050 3410 1200 3410 out1[31:0]} {1050 3440 1100 3440 out2[31:0]} {810 3450 850 3450 w[29]} {600 3390 850 3390 data[31:0]} {740 3430 850 3430 inR2[29]} {700 3410 850 3410 inR1[29]} {1050 3530 1200 3530 out1[31:0]} {1050 3560 1100 3560 out2[31:0]} {810 3570 850 3570 w[30]} {600 3510 850 3510 data[31:0]} {740 3550 850 3550 inR2[30]} {700 3530 850 3530 inR1[30]} {1050 3650 1200 3650 out1[31:0]} {1050 3680 1100 3680 out2[31:0]} {810 3690 850 3690 w[31]} {600 3630 850 3630 data[31:0]} {740 3670 850 3670 inR2[31]} {700 3650 850 3650 inR1[31]} {600 10 600 130 data[31:0]} {600 130 600 250 data[31:0]} {600 250 600 370 data[31:0]} {600 370 600 490 data[31:0]} {600 490 600 610 data[31:0]} {600 610 600 730 data[31:0]} {600 730 600 850 data[31:0]} {600 850 600 980 data[31:0]} {600 980 600 1100 data[31:0]} {600 1100 600 1220 data[31:0]} {600 1220 600 1340 data[31:0]} {600 1340 600 1460 data[31:0]} {600 1460 600 1580 data[31:0]} {600 1580 600 1700 data[31:0]} {600 1700 600 1820 data[31:0]} {600 1820 600 1940 data[31:0]} {600 1940 600 2060 data[31:0]} {600 2060 600 2180 data[31:0]} {600 2180 600 2300 data[31:0]} {600 2300 600 2420 data[31:0]} {600 2420 600 2540 data[31:0]} {600 2540 600 2660 data[31:0]} {600 2660 600 2780 data[31:0]} {600 2780 600 2910 data[31:0]} {600 2910 600 3030 data[31:0]} {600 3030 600 3150 data[31:0]} {600 3150 600 3270 data[31:0]} {600 3270 600 3390 data[31:0]} {600 3390 600 3510 data[31:0]} {600 3510 600 3630 data[31:0]} {140 140 200 140 R1[31:0]} {500 410 550 410 w[31:0]} {140 270 200 270 R2[31:0]} {810 190 850 190 w[2]} {700 270 850 270 inR1[3]}}
